apply plugin: 'java'

repositories {
    mavenCentral()
}

def ideaHome = '../idea-IC/'
def pluginName = 'google-cloud-tools-core'

dependencies {
    compile files('lib/google-api-services-developerprojects-v1-rev20140815212553-1.19.0.jar')
    compile files('lib/google-api-services-source.jar')
    compile project(':google-login-plugin')
    compile files(ideaHome + '/plugins/git4idea/lib/git4idea.jar')
    compile fileTree(dir: ideaHome + '/lib')
    compile fileTree(dir: ideaHome + '/plugins/Groovy/lib')
    compile fileTree(dir: ideaHome + '/plugins/gradle/lib')

    compile (
            ['com.google.appengine:gradle-appengine-builder-model:0.1.0'],
            ['org.eclipse.jgit:org.eclipse.jgit:3.3.0.201403021825-r'],
            ['com.google.apis:google-api-services-clouddebugger:v2-rev4-1.20.0'],
            // todo(elharo): we shouldn't need Apache commons; Guava will suffice
            ['commons-io:commons-io:2.4'],
            ['org.jdom:jdom:1.1.3'],
    )

    compile files(ideaHome + '/lib/bootstrap.jar')
    compile files(ideaHome + '/lib/util.jar')
    compile fileTree(dir: ideaHome + '/lib')
    compile fileTree(dir: ideaHome + '/plugins/Groovy/lib')
    compile fileTree(dir: ideaHome + '/plugins/gradle/lib')

    testCompile files('third_party/jackson-core-asl/jackson-core-asl-1.9.11.jar')
    testCompile files(ideaHome + '/plugins/git4idea/lib/remote-servers-git.jar')
    testCompile files(ideaHome + '/plugins/git4idea/lib/resources_en.jar')
    testCompile files(ideaHome + '/plugins/properties/lib/properties.jar')
    testCompile files(ideaHome + '/plugins/gradle/lib/gradle-tooling-api-2.2.jar')
    testCompile files(ideaHome + '/plugins/junit/lib/idea-junit.jar')
    testCompile files("${System.properties['java.home']}/../lib/tools.jar")

    testCompile (
            ['junit:junit:4.+'],
            ['org.eclipse.jgit:org.eclipse.jgit.junit:3.0.+'],
            ['org.mockito:mockito-all:1.9.5'],
    )

    testRuntime files(ideaHome + '/lib/idea_rt.jar')
    testRuntime files(ideaHome + '/lib/trove4j.jar')
}

sourceSets {
    main {
        java {
            srcDirs 'src', 'resources'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
        java {
            srcDirs 'testSrc'
        }
    }
}

// because plugin.xml doesn't live in resources
jar {
    baseName = pluginName
    version = ''
    from ('./src') {
        include 'META-INF/plugin.xml'
    }
}

task plugin(type: Zip,  dependsOn: jar) {
    baseName = pluginName
    destinationDir = file('build')
    include '*.jar'
    from('build/libs') {
        into(pluginName + '/lib')
    }
    from('lib/') {
        into(pluginName + '/lib')
    }
    from('third_party/gradle-appengine-builder-model') {
        into(pluginName + '/lib')
    }
}

task loadIdea(type:Exec) {
    workingDir '..'

    commandLine './fetchIdea.sh'
}

compileJava.dependsOn("loadIdea")
