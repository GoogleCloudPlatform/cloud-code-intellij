/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Use IntelliJ src structure for now
sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['resources']
sourceSets.test.java.srcDirs = ['testSrc']
sourceSets.test.resources.srcDirs = ['testResources', 'testData']

intellij {
    pluginName = 'google-cloud-tools'
    plugins 'Groovy', 'gradle', 'git4idea', 'properties', 'junit', 'maven'

    publish {
        pluginId '8079'
    }
}

project.afterEvaluate {
    prepareSandbox.dependsOn ':google-account-plugin:prepareSandbox'

    //todo: currently we need this to include 'ultimate' module to the plugin zip; it would be better to support such inclusion in 'intellij' plugin
    def prepareSandboxTask = project.tasks.findByName("prepareSandbox")
    prepareSandboxTask.dependsOn project('ultimate').jar
    prepareSandboxTask.doLast {
        copy {
            from files(project('ultimate').jar)
            into "$prepareSandboxTask.destinationDir/$intellij.pluginName/lib"
        }
    }
}

dependencies {
    compile(project(':google-account-plugin'))
    compile(project(':common-lib'))

    compile 'com.google.apis:google-api-services-clouddebugger:v2-rev7-1.21.0'
    compile 'com.google.apis:google-api-services-cloudresourcemanager:v1beta1-rev12-1.21.0'
    compile 'com.google.apis:google-api-services-appengine:v1-rev8-1.22.0'
    compile ('com.google.cloud.tools:appengine-plugins-core:' + toolsLibVersion) {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile files('lib/google-api-services-source.jar')
    compile 'org.yaml:snakeyaml:1.18'

    testCompile(project(':common-test-lib'))
    testRuntime files('../google-account-plugin/lib/google-gct-login-context-ij-pg.jar')
}

task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "${project.archivesBaseName}-tests"
    from sourceSets.test.output
}

configurations {
    // this is already obtained from google-api-java-client-min-repackaged
    compile.exclude group: 'com.google.api-client', module: 'google-api-client'
    tests
}

artifacts {
    tests testJar
}

test {
    testLogging {
        events "skipped", "failed"
    }
    doLast{
       println "View report at file://$buildDir/reports/tests/index.html"
    }
}

