
buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath 'gradle.plugin.org.jetbrains:gradle-intellij-plugin:0.0.31'
    }
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'propdeps'
    apply plugin: 'propdeps-idea'

    apply plugin: 'java'
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
    group = 'com.google.gct'
    version = '0.9-alpha.3-SNAPSHOT'

    apply plugin: 'org.jetbrains.intellij'
    intellij {
        version = ideaVersion
        downloadSources = true
        sandboxDirectory = "${rootProject.buildDir}/idea-sandbox"

        publish {
            username System.getenv('IJ_REPO_USERNAME')
            password System.getenv('IJ_REPO_PASSWORD')
            channel ijPluginRepoChannel
        }
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
            // Force the IDEA SDK provided version of these dependencies to avoid classloading issues.
            force 'org.apache.httpcomponents:httpclient:4.4.1', 'com.google.guava:guava:17.0'
        }
    }

    dependencies {
        compile 'com.google.guava:guava:17.0'

        testCompile 'junit:junit:4.+'
        testCompile 'org.mockito:mockito-all:1.9.5'
    }

    processResources {
        filesMatching("**/plugin.xml") {
            expand "pluginVersionPlaceholder": version
        }
    }

    apply plugin: 'findbugs'
    findbugs {
        ignoreFailures = true
        sourceSets = [sourceSets.main]
        effort = "max"
        toolVersion = '2.0.3'
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    apply plugin: 'pmd'
    pmd {
        ignoreFailures = true
        sourceSets = [sourceSets.main]
    }

    apply plugin: 'jdepend'
    configurations.all {
        resolutionStrategy {
            // JDepend manages to include a different version of itself in its own transitive closure.
            force "jdepend:jdepend:${project.jdepend.toolVersion}"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}